##0. Set working directory and library
install.packages("pscl")
install.packages("ROCR")
library(pscl)
library(ROCR)
setwd("C:/Users/estac/Documents/(Acads) PhD - Environmental Management/Dissertation/Data/2. Logistic regression/...Revision/Bivariate analysis/WorkingDIR")
getwd()
##set the personal library
.libPaths("C:/Users/estac/Documents/(Acads) PhD - Environmental Management/Dissertation/Data/2. Logistic regression/Final regression/WorkingDIR/MyLibrary")
#.libPaths() ## Press tab for options


##1. Add and attach training csv to R
#agriabandon.data <- read.csv("MyData2/Reg20052010.csv")
agriabandon.data <- read.csv("MyData2/Generalregression.csv")
attach(agriabandon.data)
summary(agriabandon.data)

##2. Convert "variablen" to categorical variable (example)
#s_aspect <- ifelse(aspect > 135 & aspect <225, 1, 0)
##add new variable to data
#agriabandon.data <- cbind(agriabandon.data, s_aspect)

##3. Are any of your covariates correlated? Generate a Pearson correlation coefficient matrix
cor.matrix <- cor(agriabandon.data, method = "pearson")
cor.matrix

##4. Standardize continuous variables which allows you to compare the strength of each covariate in model results
#z-score scaling (var-mean/sd, which makes the mean=0, sd=1, var ranges, add to dataframe)
Elevation.std <- scale(dem, center=TRUE, scale=TRUE)
Slope.std <- scale(slope, center=TRUE, scale=TRUE)
SinAspect.std <- scale(SinAspect, center=TRUE, scale=TRUE)
CosAspect.std <- scale(CosAspect, center=TRUE, scale=TRUE)
Soilgroup.std <- scale(Soil_Group, center=TRUE, scale=TRUE)
QF.std <- scale(QF, center=TRUE, scale=TRUE)
Dist_stream.std <- scale(stream, center=TRUE, scale=TRUE)
Dist_townc.std <- scale(Dist_city, center=TRUE, scale=TRUE)
Dist_road.std <- scale(Dist_road, center=TRUE, scale=TRUE)
Dist_viewp.std <- scale(Dist_view, center=TRUE, scale=TRUE)
Heritagesi.std <- scale(Heritage, center=TRUE, scale=TRUE)
Lowveg.std <- scale(Lowveg, center=TRUE, scale=TRUE)
Forest.std <- scale(forest, center=TRUE, scale=TRUE)
Builtup.std <- scale(builtup, center=TRUE, scale=TRUE)
Ricefield.std <- scale(Paddyfield, center=TRUE, scale=TRUE)
agriabandon.data <- cbind(agriabandon.data, Elevation.std, Slope.std, SinAspect.std, CosAspect.std, Soilgroup.std, QF.std, Dist_stream.std, Dist_townc.std, Dist_road.std, Dist_viewp.std, Heritagesi.std, Lowveg.std, Forest.std, Builtup.std, Ricefield.std)

###5. Run logistic regression and summarize results
#abandonment_vars.model <- glm(Code ~ Elevation.std + Slope.std + SinAspect.std + CosAspect.std + Soilgroup.std + QF.std + Dist_stream.std +  Dist_townc.std + Dist_road.std + Dist_viewp.std + Heritagesi.std + Lowveg.std + Forest.std + Builtup.std +  Ricefield.std, family = binomial, data = agriabandon.data)
abandonment_vars.model <- glm(Code ~ dem + slope + SinAspect + CosAspect + Soil_Group + QF + stream +  Dist_city + Dist_road + Dist_view + Heritage + Lowveg + forest + builtup + Paddyfield, family = binomial, data = agriabandon.data)
summary(abandonment_vars.model)
pR2(abandonment_vars.model)

###9. predicted values
Predicted=predict(abandonment_vars.model, type="response")
write.table(Predicted, "predictedvalues.txt", sep="\t")

###10. Residuals
##residual deviance indicates the response predicted by a model 
##on adding independent variables. The lower the values, the better the model
residuals(abandonment_vars.model, type="deviance")

###11. Confusion matrix: a tabular representation of actual vs predicted values
##This helps us to find the accuracy of the model and avoid overfitting 
table(agriabandon.data$Code, Predicted > 0.5)

###12. ROC : ROC summarizes the predictive power for all possible values of p > 0.5.
ROCRpred <- prediction(Predicted, agriabandon.data$Code)
ROCRperf <- performance(ROCRpred, 'tpr', 'fpr')
plot(ROCRperf)
#### Find AUC area under curve of ROC: referred to as index of accuracy (A) or 
##concordance index, is a perfect performance metrix for ROC curve
auc <- performance(ROCRpred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCRperf, main="AUC=0.69", colorize = TRUE, text.adj = c(-0.2,17))

